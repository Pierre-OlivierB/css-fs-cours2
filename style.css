:root {
    --color1: hsl(32, 100%, 75%);
    --color2: hsl(151, 24%, 60%);
    --color3: hsl(196, 77%, 45%);
    --color4: hsl(200, 80%, 20%);
    /* --color5: hsl(200, 10%, 30%); */
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    /* height: 100vh; */
    /* background: red; */
    background: url(./assets/img/photo-paysage.png) center/cover;
    height: 100vh;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    color: var(--color1);
    display: flex;
    align-items: center;
    justify-content: center;
    /*disable scrolls apparition with animation spaceship*/
    overflow: hidden;
}

.card {
    background: rgba(0, 0, 0, 0.5);
    width: calc(100% - 50px);
    padding: 20px 20px 6px;
    box-shadow: 8px 8px 3px rgba(0, 0, 0, 0.5);
    border-radius: 5px;
    /*caution with can i use : firefox issues*/
    backdrop-filter: blur(5px);
}

.card::before {
    content: '\2605';
    position: absolute;
    top: 14px;
    right: 20px;
    font-size: 2.4rem;
    /*1rem = 16px*/
}

h1 {
    margin-bottom: 24px;
    position: relative;
}

/*Preparation animation:*/
h1::after {
    content: '';
    position: absolute;
    background: var(--color2);
    height: 1px;
    width: 100%;
    bottom: -15px;
    left: 50%;
    transform: translateX(-50%) scale(0);
    animation: h1anim 5s ease-in-out forwards;
    transform-origin: left;
}

@keyframes h1anim {
    to {
        transform: translateX(-50%) scaleX(1);
    }
}

/*End preparation*/

.grid-container {
    display: grid;
    grid-template-columns: 20% 80%;
}

.polygon-container {
    filter: drop-shadow(-1px 16px 3px var(--color3));
    /*Parent should be in grid*/
    place-self: center left;
}

.polygon {
    clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
    background: linear-gradient(135deg, var(--color1) 0%, var(--color2) 50%, var(--color3) 100%);
    height: 100px;
    width: 100px;
    /* Indescriptible form so : caution ! Use : shadow from parents*/
    /* box-shadow: 5px 5px 5px red; */
}

.polygon::after {
    content: 'Un texte';
    position: absolute;
    color: var(--color2);
    background: var(--color4);
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) rotate(315deg);
    width: 90px;
    padding: 5px;
    text-align: center;
}

p {
    line-height: 26px;
    margin: 20px 0;
    /*chrome only*/
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 4;
    overflow: hidden;
    text-align: left;
}

p::selection {
    background: var(--color1);
    color: var(--color4);
}

.checkbox-container {
    display: flex;
    justify-content: space-around;
    margin: 20px 0 30px;
    perspective: 40px;
}

input[type="checkbox"] {
    display: none;
}

/*~ = all children*/
/* input[type="checkbox"]:checked ~ label{
    display: none;
} */
/*+ = just selected*/
input[type="checkbox"]:checked+label {
    background: var(--color2);
    color: var(--color4);
    transform: scale(1.2);
    filter: brightness(120%)
}

label {
    cursor: pointer;
    border: 1px solid var(--color1);
    background: var(--color4);
    padding: 10px;
    border-radius: 5px;
    transition: 0.2s;
    user-select: none;
}

label:first-of-type:hover {
    animation: label1 2s infinite linear;
}

@keyframes label1 {
    50% {
        transform: scale(1.2);
    }

    100% {
        transform: scale(1);
    }
}

/*Animation part 2 and see chackbox-container*/
label:nth-child(4):hover {
    animation: label2 3s infinite linear;
}

/*3D : Don't forget perspective on parent, here on checkbox-container*/
@keyframes label2 {
    33% {
        transform: translateZ(30px)
    }

    66% {
        transform: translateZ(-40px)
    }

    100% {
        transform: translateZ(0)
    }
}

/*en anim2*/

.e-mail {
    text-align: center;
    margin-bottom: 20px;
}

.e-mail input {
    padding: 10px;
    border-radius: 5px;
    outline: none;
    /*to solved problems when build border in focus*/
    /* border: none; */
    border: 3px solid transparent;
    transition: 0.3s;
    text-align: center;
    font-size: 1.1rem;
    color: var(--color1);
    min-width: 180px;
    width: 30%;
    max-width: 300px;
}

input[type="text"]:focus {
    background: transparent;
    border: 3px solid var(--color2);
    border-radius: 150px;
}

input[type="text"]::placeholder {
    color: var(--color3);
    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
}

button {
    cursor: pointer;
    background: var(--color2);
    border: 2px solid transparent;
    font-size: 1.3rem;
    padding: 10px 20px;
    border-radius: 200px;
    margin: 0 auto;
    display: block;
    transition: 0.5s;
}

button:active {
    transform: scale(1.2);
    background: var(--color4);
    color: var(--color3);
    border: 2px solid var(--color3);
}

button:hover {
    letter-spacing: 3px;
}

button:hover+a,
a:hover {
    opacity: 1;
    transform: translateY(0);
    visibility: visible;
}

a {
    color: var(--color2);
    /* text-decoration: none; */
    text-align: center;
    display: block;
    opacity: 0;
    visibility: hidden;
    transform: translateY(20px);
    transition: 0.3s;
}

a:visited {
    color: var(--color3);
}

/*Spaceship with animation*/
img {
    height: 60px;
    position: absolute;
    filter: drop-shadow(0px 6px 3px var(--color2));
    z-index: -1;
    animation: spaceship 15s infinite linear;
}

@keyframes spaceship {
    0% {
        top: 2%;
        left: 2%;
        transform: rotate(90deg);
    }

    10% {
        top: 6%;
        left: 30%;
        transform: rotate(130deg);
    }

    20% {
        top: 9%;
        left: 60%;
        transform: rotate(25deg);
    }

    30% {
        top: 0%;
        left: 80%;
        transform: rotate(90deg);
    }

    40% {
        top: 20%;
        left: 120%;
        transform: rotate(135deg);
    }

    50% {
        top: 50%;
        left: 80%;
        transform: rotate(160deg);
    }

    60% {
        top: 90%;
        left: 90%;
        transform: rotate(230deg);
    }

    70% {
        top: 110%;
        left: 50%;
        transform: rotate(250deg);
    }

    80% {
        top: 85%;
        left: 30%;
        transform: rotate(290deg);
    }

    90% {
        top: 50%;
        left: 15%;
        transform: rotate(90deg);
    }

    100% {
        top: 2%;
        left: 2%;
        transform: rotate(90deg);
    }
}